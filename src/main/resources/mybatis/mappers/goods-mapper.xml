<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="multi.fclass.iMint.goods.dao.IGoodsDAO">

	<!-- &gt;는 >, &lt;는 < 게시글 18개씩 조회 -->
	<select id="goodsList" resultType="goodsDTO">
		<choose>
			<when test="goods_category == 'all'">
				<choose>
					<when test="option == 'all'">
						SELECT * FROM `imint`.`goods`
						WHERE goods_id &lt; #{lastBoard} 
						AND `seller_id`
						NOT IN(
							<foreach collection="blocklist" item="item" separator="," index="index">
								#{item}
							</foreach>
						)
						AND (
							`goods_title` LIKE CONCAT('%',#{keyword},'%')
							OR `goods_content` LIKE CONCAT('%',#{keyword},'%')
							OR `seller_nick` LIKE CONCAT('%',#{keyword},'%')
						)
						AND `goods_location` = #{mb_location}
						AND `goods_isdelete` = 0
						ORDER BY `goods_create_date` DESC 
						LIMIT 18;
					</when>
					<otherwise>
						SELECT * FROM `imint`.`goods`
						WHERE goods_id &lt; #{lastBoard} 
						AND ${option} LIKE CONCAT('%',#{keyword},'%')
						AND `goods_location` = #{mb_location}
						AND `goods_isdelete` = 0
						ORDER BY `goods_create_date` DESC 
						LIMIT 18;
					</otherwise>
				</choose>
			</when>
			<otherwise>
				<choose>
					<when test="option =='all'">
						SELECT * FROM `imint`.`goods`
						WHERE goods_id &lt; #{lastBoard} 
						AND `seller_id`
						NOT IN(
							<foreach collection="blocklist" item="item" separator="," index="index">
								#{item}
							</foreach>
						)
						AND (
							`goods_title` LIKE CONCAT('%',#{keyword},'%')
							OR `goods_content` LIKE CONCAT('%',#{keyword},'%')
							OR `seller_nick` LIKE CONCAT('%',#{keyword},'%')
						)
						AND `goods_category` like CONCAT('%',#{goods_category},'%')
						AND `goods_location` = #{mb_location}
						AND `goods_isdelete` = 0
						ORDER BY `goods_create_date` DESC 
						LIMIT 18;
					</when>
					<otherwise>
						SELECT * FROM `imint`.`goods`
						WHERE goods_id &lt; #{lastBoard} 
						AND ${option} LIKE CONCAT('%',#{keyword},'%')
						AND `goods_category` like CONCAT('%',#{goods_category},'%')
						AND `goods_location` = #{mb_location}
						AND `goods_isdelete` = 0
						ORDER BY `goods_create_date` DESC 
						LIMIT 18;
					</otherwise>
				</choose>
			
			</otherwise>
		</choose>
	</select>
	
	<select id="goodsThumbnail" resultType="goodsImagesDTO">
		SELECT * FROM `imint`.`goods_images`
		WHERE `goods_id` = #{goods_id} 
		AND `goods_images_thumbnail` = 1
		AND `goods_images_isdelete` = 0 
		LIMIT 1;
	</select>
	
	<!-- 상품상세조회 -->
	<select id="goods" resultType="goodsDTO">
		SELECT  * FROM `imint`.`goods` 
		WHERE `goods_id`= #{goods_id}
		AND `goods_isdelete` = 0
		LIMIT 1;
	</select>
	
	<select id="goodsImageList" resultType="goodsImagesDTO">
		SELECT * FROM `imint`.`goods_images` 
		WHERE `goods_id` = #{goods_id}
		AND `goods_images_thumbnail` IN (0,1) 
		AND `goods_images_isdelete` = 0 
		ORDER BY `goods_images_thumbnail` DESC, `goods_images_id` ASC
		LIMIT 1000;
	</select>
	
	 <!--상품 파일업로드를 하기위해 insert후에 날짜값을 받아오기 위함-->
    <select id="goodsDate" resultType="String">
        SELECT `goods_create_date` FROM `imint`.`goods` WHERE `goods_id`=#{goods_id} LIMIT 1;
    </select>
	
	<!-- 상품등록 -->
	<insert id="goodsInsert">
		INSERT INTO `imint`.`goods` (`goods_id`,`seller_id`, `seller_nick`, `goods_title`, `goods_content`, `goods_price`, `goods_category`,`goods_suggestible`, `goods_location`) 
		VALUES (#{goodsId},#{sellerId}, #{sellerNick}, #{goodsTitle}, #{goodsContent}, #{goodsPrice}, #{goodsCategory}, #{goodsSuggestible}, #{goodsLocation});
		<selectKey resultType="java.lang.Integer" keyProperty="goodsId" keyColumn="goods_id" order="AFTER">
        	SELECT LAST_INSERT_ID()
   		</selectKey>        
	</insert>
	<insert id="goodsImagesInsert">
		INSERT INTO `imint`.`goods_images` ( `goods_images_id`,`goods_id`, `goods_images_path`, `goods_images_thumbnail`, `goods_images_originname`) 
		VALUES (#{goodsImagesId}, #{goodsId}, #{goodsImagesPath}, #{goodsImagesThumbnail}, #{goodsImagesOriginname});
		<selectKey resultType="java.lang.Integer" keyProperty="goodsImagesId" keyColumn="goods_images_id" order="AFTER">
        	SELECT LAST_INSERT_ID()
   		</selectKey>   
	</insert>
	
	<!-- 상품수정 -->
	<update id="goodsUpdate">
		UPDATE `imint`.`goods` 
		SET `goods_title`=#{goodsTitle}, `goods_content`=#{goodsContent}, `goods_price`=#{goodsPrice}, `goods_category`=#{goodsCategory}, `goods_suggestible`=#{goodsSuggestible} 
		WHERE  `goods_id`= #{goodsId}
		AND `seller_id`= #{sellerId}
		AND `goods_isdelete` = 0;
	</update>
	<!-- 이미지수정은 delete후에 새로 insert id="goodsImagesInsert"-->
	<delete id="goodsImagesDelete">
		DELETE FROM `imint`.`goods_images` 
		WHERE `goods_id`=#{goods_id};
	</delete>
	
	
	<!-- 상품삭제 -->
	<update id="goodsIsdelete">
		UPDATE `imint`.`goods` SET `goods_isdelete`='1' WHERE `goods_id`=#{goods_id} AND `seller_id`=#{seller_id};
	</update>
	<update id="goodsImagesIsdelete">
		UPDATE `imint`.`goods_images` SET `goods_images_isdelete`='1' WHERE `goods_id`= #{goods_id};
	</update>
	
	<!-- 전체 상품 조회 -->
	<select id="adminGoodsList" resultType="goodsDTO">
		SELECT * FROM `imint`.`goods`
		WHERE `goods_category` like CONCAT('%',#{goods_category},'%')
		AND(
			`goods_title` LIKE CONCAT('%',#{keyword},'%')
			OR `goods_content` LIKE CONCAT('%',#{keyword},'%')
			OR `seller_nick` LIKE CONCAT('%',#{keyword},'%')
		)
		ORDER BY `goods_create_date` DESC
		limit #{page}, 15;
	</select>
	
	<select id="goodsCount" resultType="int">
		SELECT COUNT(*) FROM `imint`.`goods` 
		WHERE `goods_category` like CONCAT('%',#{goods_category},'%')
		AND(
			`goods_title` LIKE CONCAT('%',#{keyword},'%')
			OR `goods_content` LIKE CONCAT('%',#{keyword},'%')
			OR `seller_nick` LIKE CONCAT('%',#{keyword},'%')
		)
		LIMIT 1;
	</select>
	
</mapper>