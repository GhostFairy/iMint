<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="multi.fclass.iMint.chat.dao.IChatDAO">

<!-- 풀 받고 CHATROOMDTO에 맞게 변경하기 (아직X) -->
	<!-- 채팅내용 저장! -->
	<!-- 1. 최초 채팅하기 버튼 클릭시 채팅방 정보 db에 저장 -->
	<insert id="insertChatRoomInitInfo" parameterType="chatRoomDTO">
		insert into
			chat_room values(
				#{chatRoomId}, 
				#{goodsId},
				#{mbId},
				#{chatRoomCreateDate}, 
				#{chatRoomIsDelete}
				)
	</insert>
	<!-- 2. 채팅하고 뒤로가기버튼 눌렀을시 채팅메세지 정보 db에 저장 -->
	<insert id="insertChatMessageInfo" parameterType="chatMessageDTO">
		insert into
			chat_message (
				chat_message_id, 
				chat_room_id,
				chat_message_create_date,
				chat_message_content
				)
			values (
			#{chatMessageId}, 
			#{chatRoomId}, 
			now(),
			#{chat_message_content}
			)
			
		on duplicate key update
			chat_message_create_date = values(chat_message_create_date),
			chat_message_content = values(chat_message_content)
	</insert>

	<!-- 채팅내용 불러오기 -->
	<!-- 3. 조건에 따른 채팅내용 + 정보불러오기 = 채팅목록에서 채팅방 각각을 눌렀을 때 불러오는 메세지값 -->
	<select id="bringChatMessage" resultType="chatMessageDTO" parameterType="int">
		select
			chat_message_create_date, 
			chat_message_content
		
		from chat_message
		
		where chat_room_id = #{chatRoomId}
	</select>
	<!-- 4. 조건에 따른 채팅내용 + 정보 불러오기 = 채팅목록에서 채팅방 눌렀을 시 불러오는 다른 값들 -->
	<!-- 상대방닉네임(구매자인경우- 판매자, 판매자인경우 - 구매자), 가격흥정여부 -->
	<select id="bringChatInfo" resultMap="chatRoomDTOView" parameterType="int">
		select 
			cr.mb_id as 'buyerId', 
			mbuy.mb_nick as '구매희망자 닉네임',
			g.mb_id as '판매자	id',
			msell.mb_nick as '판매자 닉네임',
			g.goods_suggestible as '가격흥정여부'
		
		from chat_room as cr
		
			left outer join member as mbuy on cr.mb_id = mbuy.mb_id
			left outer join goods as g on cr.goods_id = g.goods_id
			left outer join member	as msell on g.mb_id = msell.mb_id
		
		where chat_room_id = #{chatRoomId};
		<!-- 참조entity, chat_room, member, goods,  -->
	</select>

	<!-- 채팅목록 -->
	<!-- 5. 채팅목록 보여주기 -->
	<resultMap type="" id=""></resultMap>
	<select id="bringChatList" resultType="chatRoomDTO">
		select 
			cr.chat_room_id as '채팅방 id', 
			cr.mb_id as '구매희망자id', 
			mbuy.mb_nick as '구매희망자 닉네임',
			mbuy.mb_thumbnail as '구매희망자 프로필사진경로',
			g.mb_id as '판매자 id', 
			msell.mb_nick as '판매자 닉네임', 
			msell.mb_thumbnail as '판매자 프로필사진경로',
			g.goods_title as '상품명', 
			g.goods_price as '가격',
			gi.goods_images_path as '상품 대표이미지경로', 
			cr.chat_room_isdelete as '채팅방삭제여부',
			cr.chat_room_create_date as '채팅방생성날짜'
			
		from chat_room as cr
			
			left outer join member as mbuy on cr.mb_id = mbuy.mb_id
			left outer join goods as g on cr.goods_id = g.goods_id
			left outer join member as msell on g.mb_id = msell.mb_id
			left outer join (select * from goods_images where goods_images_thumbnail = true) as gi on g.goods_id = gi.goods_id
       	order by chat_room_create_date DESC; 	
	</select>
	
	<!-- 6. 채팅목록에서 다중선택으로 채팅방 삭제 -->
	<delete id="deleteChatRoom">
		delete from chat_room where chat_room_id in
		<foreach collection="array" item="add" open="(" close=")" separator=",">
			#{add}
		</foreach>
	</delete>
	
	
	<!-- insert into chat_message values(#{chatMessageId}, #{chatRoomId}, #{chatMessageCreateDate}, 
			#{chatMessageContent}) on duplicate key update chat_message_content = values(#{chatMessageCreateDate}, 
			#{chatMessageContent}) -->
	<!-- <delete id="deleteChatRoom" parameterType="int">
		delete * from chat_room where chat_room_id = #{chatRoomId}
	</delete> -->
	<!-- select cr.chat_room_id as '채팅방 id', cr.mb_id as '구매희망자id', mbuy.mb_nick 
		as '구매희망자 닉네임', mbuy.mb_thumbnail as '구매희망자 프로필사진경로', g.mb_id as '판매자 id', 
		msell.mb_nick as '판매자 닉네임', msell.mb_thumbnail as '판매자 프로필사진경로', g.goods_title 
		as '상품명', g.goods_price as '가격', gm.goods_images_thumnail(1) as '상품 대표이미지', 
		cr.chat_room_isdelete as '채팅방삭제여부', cr.chat_room_create_date as '채팅방생성날짜' 
		from chat_room cr left outer join member mbuy on cr.mb_id = mbuy.mb_id left 
		outer join goods g on cr.goods_id = g.goods_id left outer join member msell 
		on cr.mb_id = msell.mb_id left outer join goods_images gm on g.goods_id = 
		gm.goods_id; -->
<!-- 	<resultMap type="ChatRoomDTO" id="chatRoomDTOView">
		<id column="chat_room_id" property="chatRoomId"/>위에서 출력 안하는데 있어야 하나?
		<result column="mb_id" property="mbId"/>	
		<association column="mb_id" property="member" javaType="Member">
			<result column="mb_nick" property="mbNick"/>mbuy.mb_nick 아래랑 어떻게 구분?
			<result column="mb_nick" property="mbNick"/>mbsell.mb_nick
		</association>
		<association column="goods_id" property="goods" javaType="Goods">
			<id column="mb_id" property="mbId"/>
			<result column="goods_suggestible" property="goodsSuggestible"/>
		</association>
	</resultMap> -->
<!-- 	<resultMap type="ChatRoomDTO" id="chatRoomDTOView">
		<id column="chat_room_id" property="chatRoomId"/>
		<result column="goods_id" property="goodsId"/>
		<result column="mb_id" property="mbId"/>	
		<result column="chat_room_create_date" property="chatRoomCreateDate"/>	
		<result column="chat_room_isdelete" property="chatRoomIsdelete"/>	
		<result column="chat_room_isreserved" property="chatRoomIsreserved"/>	
		<association column="mb_id" property="member" javaType="Member">
		</association>
	</resultMap> -->

</mapper>