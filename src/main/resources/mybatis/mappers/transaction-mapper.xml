<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="multi.fclass.iMint.transaction.dao.ITransactionDAO">
	<!-- 거래완료여부 확인(채팅용) -->
	<select id="checkTransaction">
		SELECT
			count(*)
		FROM
			`imint`.`transaction` AS trx
			JOIN `imint`.`goods` AS g ON trx.goods_id = g.goods_id
		WHERE
			trx.trx_isdelete = FALSE
			AND (trx.mb_id LIKE #{myId} OR g.seller_id LIKE #{myId})
			AND g.goods_id = #{goodsId}
	</select>
	
	<!-- 예약여부 확인(채팅용) -->
	<select id="checkReservation" resultType="ReservationCheckDTO">
		SELECT
			seller_id,
			buyer_id
		FROM
			`imint`.`chatroom`
		WHERE
			isdelete = FALSE
			AND goods_id = #{goodsId}
			AND resrv_date IS NOT NULL
	</select>
	
	<!-- 해당 상품 관련 채팅방 목록 조회(예약자 선택) -->
	<select id="getChatroomList" resultType="TransactionChatroomDTO">
		SELECT
			IF(resrv_date IS NOT NULL, TRUE, FALSE) AS reserved,
			id AS chatroom_id,
			buyer_id
		FROM
			`imint`.`chatroom`
		WHERE
			isdelete = FALSE
			AND goods_id = #{goodsId}
	</select>
	
	<!-- 예약등록 -->
	<update id="makeReservation">
		UPDATE
			`imint`.`chatroom` AS cr
			JOIN `imint`.`goods` AS g ON cr.goods_id = g.goods_id
		SET
			cr.resrv_date = CURRENT_TIMESTAMP,
			g.goods_status = "resrv"
		WHERE
			cr.id = #{chatroomId}
	</update>
	
	<!-- 예약취소 -->
	<update id="cancelReservation">
		UPDATE
			`imint`.`chatroom` AS cr
			JOIN `imint`.`goods` AS g ON cr.goods_id = g.goods_id
		SET
			cr.resrv_date = NULL,
			g.goods_status = "wait"
		WHERE
			cr.id = #{chatroomId}
	</update>
</mapper>