<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="multi.fclass.iMint.transaction.dao.ITransactionDAO">
	<!-- 예약여부 확인(채팅용) -->
	<select id="checkReservation" resultType="TransactionDTO">
		SELECT
			cr.id,
			g.goods_id,
			g.goods_title,
			g.seller_id,
			cr.buyer_id
		FROM
			`imint`.`goods` AS g
			LEFT JOIN (SELECT * FROM `imint`.`chatroom` WHERE resrv_date IS NOT NULL) AS cr ON g.goods_id = cr.goods_id
		WHERE
			g.goods_isdelete = FALSE
			AND (cr.isdelete IS NULL OR cr.isdelete = FALSE)
			AND g.goods_id = #{goodsId}
	</select>
	
	<!-- 거래완료여부 확인(채팅용) -->
	<select id="checkTransaction" resultType="TransactionDTO">
		SELECT
			trx.trx_id AS id,
			g.goods_id,
			g.goods_title,
			g.seller_id,
			trx.mb_id AS buyer_id
		FROM
			`imint`.`goods` AS g
			LEFT JOIN `imint`.`transaction` AS trx ON g.goods_id = trx.goods_id
		WHERE
			g.goods_isdelete = FALSE
			AND (trx.trx_isdelete IS NULL OR trx.trx_isdelete = FALSE)
			AND g.goods_id = #{goodsId}
	</select>
	
	<!-- 예약등록 -->
	<update id="makeReservation">
		UPDATE
			`imint`.`chatroom` AS cr
			JOIN `imint`.`goods` AS g ON cr.goods_id = g.goods_id
		SET
			cr.resrv_date = CURRENT_TIMESTAMP,
			g.goods_status = "resrv"
		WHERE
			cr.id = #{chatroomId}
	</update>
	
	<!-- 예약취소 -->
	<update id="cancelReservation">
		UPDATE
			`imint`.`chatroom` AS cr
			JOIN `imint`.`goods` AS g ON cr.goods_id = g.goods_id
		SET
			cr.resrv_date = NULL,
			g.goods_status = "wait"
		WHERE
			cr.id = #{chatroomId}
	</update>
	
	<!-- 차단한 회원과의 모든 예약 취소 -->
	<update id="cancelAllReservation">
		UPDATE
			`imint`.`chatroom` AS cr
			JOIN `imint`.`goods` AS g ON cr.goods_id = g.goods_id
		SET
			cr.resrv_date = NULL,
			g.goods_status = "wait"
		WHERE
			g.goods_status LIKE "resrv"
			AND ((cr.buyer_id LIKE #{blockId} AND g.seller_id LIKE #{myId})
			OR (cr.buyer_id LIKE #{myId} AND g.seller_id LIKE #{blockId}))
	</update>
	
	<!-- 거래완료 -->
	<insert id="completeTransaction">
		INSERT INTO
			`imint`.`transaction`(trx_complete_date, mb_id, goods_id)
		VALUES
			(CURRENT_TIMESTAMP, #{buyerId}, #{goodsId});
	</insert>
	
	<!-- 거래완료: 상품 상태 변경 -->
	<update id="updateGoodsStatus">
		UPDATE
			`imint`.`goods`
		SET
			goods_status = "comp"
		WHERE
			goods_id = #{goodsId}
	</update>
</mapper>