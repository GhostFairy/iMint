<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="multi.fclass.iMint.mypage.dao.IMypageDAO">
	<!-- 내 아이 목록 -->
	<select id="getMyChildrenList" resultType="MypageChildDTO">
		SELECT
			mb_id AS child_id,
			mb_nick AS child_nick
		FROM
			`imint`.`member`
		WHERE
			mb_guard LIKE #{myId}
	</select>

	<!-- 관심 + 구매예약 목록 -->
	<select id="getWishAndReserveList" resultType="MypageDTO">
		SELECT
			category,
		    goods_id,
		    goods_title,
		    goods_price,
		    goods_location,
		    goods_create_date,
		    goods_images_path,
		    goods_images_originname,
		    wishes,
		    last_update_date
		FROM
		    ((SELECT
				"resrv" AS category,
				g.goods_id,
				g.goods_title,
				g.goods_price,
				g.goods_location,
				g.goods_create_date,
				gi.goods_images_path,
				gi.goods_images_originname,
				w.wishes,
				cr.resrv_date AS last_update_date
			FROM
				`imint`.`chatroom` AS cr
                JOIN `imint`.`goods` AS g ON cr.goods_id = g.goods_id
				JOIN `imint`.`goods_images` AS gi ON g.goods_id = gi.goods_id
				JOIN (SELECT goods_id, count(*) AS wishes FROM `imint`.`wishlist` WHERE wishlist_isdelete = FALSE GROUP BY goods_id) as w on g.goods_id = w.goods_id
			WHERE
				cr.isdelete = FALSE
				AND g.goods_isdelete = FALSE
				AND gi.goods_images_isdelete = FALSE
				AND cr.buyer_id LIKE #{myId}
                AND cr.resrv_date IS NOT NULL				
                AND gi.goods_images_thumbnail = TRUE)
			UNION ALL
			(SELECT
				CASE
					WHEN g.goods_status = "wait" THEN "wait"
					WHEN g.goods_status = "resrv" THEN "!resrv"
					WHEN g.goods_status = "comp" THEN IF(trx.mb_id LIKE #{myId}, "comp", "!comp")
				END AS category,
				g.goods_id,
				g.goods_title,
				g.goods_price,
				g.goods_location,
				g.goods_create_date,
				gi.goods_images_path,
				gi.goods_images_originname,
				wi.wishes,
		        IF(g.goods_status = "comp" AND trx.mb_id LIKE #{myId}, trx.trx_complete_date, w.wishlist_create_date) AS last_update_date
			FROM
				`imint`.`wishlist` AS w
                JOIN `imint`.`goods` AS g ON w.goods_id = g.goods_id
				JOIN `imint`.`goods_images` AS gi ON g.goods_id = gi.goods_id
				JOIN (SELECT goods_id, count(*) AS wishes FROM `imint`.`wishlist` WHERE wishlist_isdelete = FALSE GROUP BY goods_id) as wi on g.goods_id = wi.goods_id
				LEFT JOIN `imint`.`transaction` AS trx ON g.goods_id = trx.goods_id
				LEFT JOIN `imint`.`chatroom` AS cr ON g.goods_id = cr.goods_id
			WHERE
				w.wishlist_isdelete = FALSE
				AND g.goods_isdelete = FALSE
				AND gi.goods_images_isdelete = FALSE
				AND (trx_isdelete = FALSE OR trx.trx_isdelete IS NULL)
				AND (cr.isdelete = FALSE OR cr.isdelete IS NULL)
				AND w.mb_id LIKE #{myId}
                AND gi.goods_images_thumbnail = TRUE))
			AS result
		ORDER BY
			last_update_date DESC, goods_id DESC
		LIMIT
			#{startIndex}, #{numberOfItems}
	</select>
	
	<!-- 판매중(대기 + 예약) 목록 -->
	<select id="getSellingList" resultType="MypageDTO">
		SELECT
			IF(g.goods_status = "wait", "wait", "resrv") AS category,
			g.goods_id,
			g.goods_title,
			g.goods_price,
			g.goods_location,
			g.goods_create_date,
			gi.goods_images_path,
			gi.goods_images_originname,
			w.wishes,
			IF(g.goods_status = "resrv", cr.resrv_date, g.goods_create_date) AS last_update_date
		FROM
			`imint`.`goods` AS g
            JOIN `imint`.`goods_images` AS gi ON g.goods_id = gi.goods_id
            JOIN (SELECT goods_id, count(*) AS wishes FROM `imint`.`wishlist` WHERE wishlist_isdelete = FALSE GROUP BY goods_id) as w on g.goods_id = w.goods_id
		    LEFT JOIN `imint`.`chatroom` AS cr ON g.goods_id = cr.goods_id
		WHERE
			g.goods_isdelete = FALSE
			AND gi.goods_images_isdelete = FALSE
			AND (cr.isdelete = FALSE OR cr.isdelete IS NULL)
			AND g.seller_id LIKE #{myId}
			AND (g.goods_status = "wait" OR g.goods_status = "resrv")
            AND gi.goods_images_thumbnail = TRUE
		ORDER BY
			last_update_date DESC, g.goods_id DESC
		LIMIT
			#{startIndex}, #{numberOfItems}
	</select>
	
	<!-- 거래(구매 + 판매)완료 목록 -->
	<select id="getCompleteList" resultType="MypageDTO">
		SELECT
			IF(trx.mb_id LIKE #{myId}, "buy", "sell") AS category,
			g.seller_nick,
			g.goods_id,
		    g.goods_title,
		    g.goods_price,
		    g.goods_location,
		    g.goods_create_date,
		    gi.goods_images_path,
		    gi.goods_images_originname,
		    w.wishes,
			trx.trx_complete_date AS last_update_date
		FROM
			`imint`.`transaction` AS trx
			JOIN `imint`.`goods` AS g ON trx.goods_id = g.goods_id
			JOIN `imint`.`goods_images` AS gi ON g.goods_id = gi.goods_id
			JOIN (SELECT goods_id, count(*) AS wishes FROM `imint`.`wishlist` WHERE wishlist_isdelete = FALSE GROUP BY goods_id) as w on g.goods_id = w.goods_id
		WHERE
			trx.trx_isdelete = FALSE
			AND gi.goods_images_isdelete = FALSE
			AND (trx.mb_id LIKE #{myId} OR g.seller_id LIKE #{myId})
			AND gi.goods_images_thumbnail = TRUE
		ORDER BY
			last_update_date DESC, g.goods_id DESC
		LIMIT
			#{startIndex}, #{numberOfItems}
	</select>
	
	<!-- 채팅방 목록 -->
	<select id="getChatroomList" resultType="MypageChatroomDTO">
	SELECT
		cr.id,
	    g.goods_id,
	    g.goods_title,
		g.goods_price,
		g.goods_suggestible,
	    IF(g.seller_id LIKE #{myId}, cr.buyer_id, g.seller_id) AS opponent_id,
	    IF(g.seller_id LIKE #{myId}, mbbuy.mb_nick, g.seller_nick) AS opponent_nick,
	    IF(g.seller_id LIKE #{myId}, mbbuy.mb_thumbnail, mbsell.mb_thumbnail) AS opponent_thumbnail,
	    g.goods_location,
	    gi.goods_images_path,
	    gi.goods_images_originname,
	    cm.message,
	    IF(cm.send_date IS NULL, cr.create_date, cm.send_date) AS last_update_date
	FROM
		`imint`.`chatroom` AS cr
	    JOIN (SELECT mb_id, mb_nick, mb_thumbnail FROM `imint`.`member`) AS mbbuy on cr.buyer_id = mbbuy.mb_id
	    JOIN `imint`.`goods` AS g ON cr.goods_id = g.goods_id
	    JOIN (SELECT mb_id, mb_thumbnail FROM `imint`.`member`) AS mbsell on g.seller_id = mbsell.mb_id
	    JOIN `imint`.`goods_images` AS gi ON g.goods_id = gi.goods_id
	    LEFT JOIN
	    	(SELECT
	    		chatroom_id,
	    		message,
	    		send_date
	    	FROM
	    		(SELECT
	    			chatroom_id,
	    			message,
	    			send_date,
	    			ROW_NUMBER() OVER(PARTITION BY chatroom_id ORDER BY send_date DESC) AS recent
	    		FROM
	    			`imint`.`chat_messages`
	    		WHERE
	    			is_deleted = FALSE) AS r
	    	WHERE
	    		r.recent = 1
	    	ORDER BY
	    		send_date DESC) AS cm ON cr.id = cm.chatroom_id
	WHERE
		cr.isdelete = FALSE
	    AND gi.goods_images_isdelete = FALSE
	    AND (g.seller_id LIKE #{myId} OR cr.buyer_id LIKE #{myId})
	    AND gi.goods_images_thumbnail = TRUE
	ORDER BY
		last_update_date DESC, cr.create_date DESC
	LIMIT
		#{startIndex}, #{numberOfItems}
	</select>
</mapper>